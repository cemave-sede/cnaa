# Tutorial bem completo para usar de referência:
# https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/

# Banco de dados traduzido de:
# https://github.com/rfordatascience/tidytuesday/blob/master/data/2018/2018-10-23/movie_profit.csv


# Carregamento dos pacotes
if(!require(pacman)){install.packages("pacman")}
pacman::p_load(ggplot2, dplyr, scales, ggpubr, grDevices)


# Seleção do diretório de trabalho (working directory)
# Isso pode ser feito manualmente: Session > Set Working Directory > Choose Directory

# Carregamento do banco de dados
dados <- read.csv2("LucroFilmes.csv", stringsAsFactors = T)
glimpse(dados)


########################## Variáveis categóricas ############################


## Gráfico de barras que usaremos como base
gb <- ggplot(data = dados) +
  geom_bar(aes(x = Genero, y = (..count..)/sum(..count..),
               fill = Genero), show.legend = F) +
  labs(y = "Quantidade de filmes", x = "Gênero") +
  scale_y_continuous(expand = expansion(add = c(0,0.02)),
                     labels = scales::percent_format()) +
  scale_x_discrete(labels = c("Ação", "Aventura", "Comédia", "Drama", "Terror")) +
  theme_classic()


## Gráfico de médias que usaremos como base
gm <- dados %>% filter(Classificacao %in% c("PG", "PG-13", "R")) %>%
  ggplot(aes(x = Genero, y = LucroLocal, color = Classificacao)) +
  geom_point(stat = "summary", fun = "mean", position = position_dodge(.4)) +
  geom_errorbar(stat = "summary", fun.data = "mean_ci", width = 0.3,
                position = position_dodge(.4)) +
  labs(y = "Lucro Local (US$)", x = "Gênero", color = "Classificação") +
  theme_classic()



## Modificando as cores manualmente (criando sua própria paleta):

### Com cores padrão do R
### http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf

gb + scale_fill_manual(values = c("cadetblue", "darksalmon", "darkseagreen4",
                                  "lightpink3", "mediumpurple"))

gm + scale_color_manual(values = c("cadetblue", "darksalmon", "darkseagreen4"))



### Com cores em código hexadecimal
### https://www.garrickadenbuie.com/blog/custom-discrete-color-scales-for-ggplot2/
### https://coolors.co/

gb + scale_fill_manual(values = c("#00798c", "#d1495b", "#edae49",
                                  "#66a182", "#2e4057"))


gm + scale_color_manual(values = c("#00798c", "#d1495b", "#edae49"))


gm + scale_color_manual(values = c("#00798c", "#d1495b", "#edae49"),
                        breaks = c("PG", "R", "PG-13"))
# Mudando a atribuição das cores/ ordem da legenda



### Opção para agilizar o uso de uma paleta criada por você:

paleta <- c("#00798c", "#d1495b", "#edae49", "#66a182", "#2e4057")

gb + scale_fill_manual(values = paleta)

gm + scale_color_manual(values = paleta)



## Usando as opções do ggplot2 (https://rdrr.io/r/grDevices/palettes.html):
# https://karloguidoni.com/post/paletas-de-cores-disponiveis-no-r/
# https://pbs.twimg.com/media/D3GqKZyXgAA56sb?format=png&name=medium

gb + scale_fill_manual(values = hcl.colors(n = 5,
                                           palette = "TealRose"))

gm + scale_color_manual(values = hcl.colors(n = 3,
                                            palette = "Cold"))




## Usando uma paleta de pacotes do R:


### Pacote RColorBrewer (https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)

#### Todas as opções de paletas do pacote
pacman::p_load(RColorBrewer)
par(mar = c(3,4,2,2))
display.brewer.all()

#### Apenas opções de paletas adequadas a daltônicos
display.brewer.all(colorblindFriendly = TRUE)

gb + scale_fill_brewer(palette = "Dark2")

gm + scale_color_brewer(palette = "Dark2")



### Pacote wesanderson
pacman::p_load(wesanderson)
# https://github.com/karthik/wesanderson
names(wes_palettes)


gb + scale_fill_manual(values = wes_palette(n = 5, name = "Royal2",
                                            type = "discrete"))

gm + scale_color_manual(values = wes_palette(n = 3, name = "GrandBudapest1",
                                             type = "discrete"))



### Paleta Viridis

gb + scale_fill_viridis_d(option = "cividis")
# d de discrete
# Opções: magma, inferno, cividis, viridis e plasma
# https://sjmgarnier.github.io/viridisLite/reference/viridis.html

gm + scale_color_viridis_d(option = "magma")


### Tons de cinza

gb + scale_fill_grey()

gm + scale_color_grey(start = 0.1, end = 0.7)



### Está acessível para daltônicos?
pacman::p_load(colorBlindness)
# https://cran.r-project.org/web/packages/colorBlindness/vignettes/colorBlindness.html

cvdPlot(gb + scale_fill_manual(values = paleta))
cvdPlot(gb + scale_fill_brewer(palette = "Dark2"))


########################## Variáveis numéricas ###############################


## Gráfico de dispersão que usaremos como base

df <- dados %>% filter(Orcamento <= 1000000)

gs <- ggplot(df) +
  geom_point(aes(x = LucroLocal, y = LucroMundial,
                 color = Orcamento),
             size = 1.1) +
  labs(y = "Lucro Mundial (em milhões de US$)",
       x = "Lucro Local (em milhões de US$)",
       color = "Orçamento") +
  scale_y_continuous(labels = scales::number_format(scale = 1e-6),
                     limits = c(0,0.8e+8)) +
  scale_x_continuous(labels = scales::number_format(scale = 1e-6),
                     limits = c(0,0.5e+8)) +
  theme_classic()


## Inverter as cores do gradiente

gs + scale_color_continuous(trans = 'reverse',
                            labels = scales::number_format(big.mark = ".",
                                                           decimal.mark = ",",
                                                           prefix = "US$ "))


## Opções do ggplot2

gs + scale_color_gradient(low = "lightgreen", high = "darkgreen")

gs + scale_color_gradient2(low = "blue", mid = "grey80", high = "red",
                           midpoint = mean(df$Orcamento))


gs + scale_color_gradientn(colors = rainbow(2))
# https://rdrr.io/r/grDevices/palettes.html


gs + scale_color_gradientn(colors = hcl.colors(n = 20,
                                               palette = "DarkMint",
                                               rev = TRUE))
# https://karloguidoni.com/post/paletas-de-cores-disponiveis-no-r/
# https://pbs.twimg.com/media/D3GqKZyXgAA56sb?format=png&name=medium


### Pacote RColorBrewer (https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)

#### Todas as opções de paletas do pacote
pacman::p_load(RColorBrewer)
par(mar = c(3,4,2,2))
display.brewer.all()


#### Usando uma paleta de gradiente

gs + scale_color_distiller(palette = "YlGnBu", direction = 1)

gs + scale_color_distiller(palette = "PuOr", direction = -1)


##### Pegar o código hexadecimal das paletas brewer
RColorBrewer::brewer.pal("YlGnBu", n = 6)



### Pacote wesanderson
pacman::p_load(wesanderson)
# https://github.com/karthik/wesanderson
names(wes_palettes)

gs + scale_color_gradientn(colors = wes_palette(name = "Zissou1"))



### Paleta Viridis

gs + scale_color_viridis_c(option = "inferno", direction = -1)
# c de continuous
# Opções: magma, inferno, ciridis, viridis e plasma





