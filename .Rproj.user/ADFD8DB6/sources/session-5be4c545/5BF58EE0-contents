---
title: "Censo Neotropical de Aves Aquáticas - CNAA - Painel CEMAVE 2020-2022"
author: " " 
runtime: shiny
output: 
  flexdashboard::flex_dashboard:
    theme: cerulean
    orientation: columns
    vertical_layout: fill
    css: style.css
    #source_code: embed
    social: [ "instagram", "youtube"]
    navbar:
    #logo: logo.png
    #favicon: favicon.png
    
---

```{r setup, include=FALSE}

library(devtools)
#install_github("paternogbc/ecodados")
library(ggplot2)
library(plotly)
library(leaflet)
library(flexdashboard)
library(DT)
library(tidyverse)
library(tibble)
library(htmltools)
library(htmlwidgets)
library(tibble)
library(shiny)
library(httr)
library(iNEXT)
library(BiodiversityR)
library(hillR)
library(betapart)
library(viridis)

```




```{r carregando dados, include = FALSE}


################# Carregando dados gerais do CNAA

dados_cnaa <- read_csv2('dados/cnaa.csv')

#dados_cnaa <- read_table('dados/cnaa.txt')

#View(dados_cnaa)

# checando a estrutura dos dados

str(dados_cnaa)

# trasformando variáveis em fator

dados_cnaa$campanha <- as.factor(dados_cnaa$campanha)
dados_cnaa$ano <- as.factor(dados_cnaa$ano) 
dados_cnaa$especie_CBRO <- as.factor(dados_cnaa$especie_CBRO)
dados_cnaa$especie_CNAA <- as.factor(dados_cnaa$especie_CNAA)
dados_cnaa$nome_vulgar <- as.factor(dados_cnaa$nome_vulgar)
dados_cnaa$codigo_CNAA <- as.factor(dados_cnaa$codigo_CNAA)
dados_cnaa$familia <- as.factor(dados_cnaa$familia)
dados_cnaa$grupos <- as.factor(dados_cnaa$grupos)
dados_cnaa$ordem <- as.factor(dados_cnaa$ordem)
dados_cnaa$mes <- as.factor(dados_cnaa$mes)
dados_cnaa$ano <- as.factor(dados_cnaa$ano)
dados_cnaa$local <- as.factor(dados_cnaa$local)
dados_cnaa$estacao <- as.factor(dados_cnaa$estacao)

# transformando variável em data

strptime(dados_cnaa$data,format="%d/%m/%Y")

# checando a estrutura dos dados

str(dados_cnaa)
glimpse(dados_cnaa)
#View(dados_cnaa)

```






Apresentação
=====================================

## Column {data-width="400"}

### **O Censo Neotropical de Aves Aquáticas - CNAA**  

<br/> 

O Censo Neotropical de Aves Aquáticas -- CNAA/Brasil é um programa de monitoramento de longo prazo, baseado em contagem de aves aquáticas, realizadas duas vezes ao ano (fevereiro e julho) de forma concomintante em vários países da América do Sul. Desde 2021 o Brasil vem envidando esforços no monitoramento de espécies de aves aquáticas (representantes de 26 famílias ocorrem no país), a fim de produzir dados úteis ao entendimento do estado de conservação dessas aves e das áreas úmidas. Atualmente, o CEMAVE coordena essa iniciativa no Brasil.

<!-- Em 2015 o CEMAVE organizou uma expedição para a realização de um amostragem de aves limícolas em algumas localidades na Costa do Nordeste, da foz do Rio Jaguaribe (CE) até a foz do Rio Cunhaú (RN). Na ocasião, a Lagoa de Guaraíras, no Município de Tibau do Sul (RN), foi identificada como o principal local de concentração de aves limícolas dentre as áreas visitadas. Posteriormente, a região da Ilha da Restinga, no estuário do Rio Paraíba, em Cabedelo, na Paraíba, foi também identificada como uma importante área para a conservação de aves na região Nordeste, por sua riqueza de espécies e concentração de indivíduos. -->

<!-- Nessas duas localidades atividades humanas com potencial impacto sobre a avifauna foram documentadas, incluindo turismo, carcinocultura e urbanização. --> 

<br/> 

Em julho de 2022, como parte do Censo Neotropical de Aves Aquáticas - CNAA, o CEMAVE iniciou um projeto de monitoramento das aves aquáticas em duas áreas na costa do Nordeste: Ilha da Restinga, localizada no estuário do Rio Paraíba, no município de Cabedelo, PB, e Lagoa de Guaraíras, no município de Tibau do Sul, RN. Nesse painel *on-line* apresentamos os dados obtidos nesse projeto até o momento, acompanhados de algumas análises preliminares. Esperamos que as informações compartilhadas possam ser úteis a pessoas e instituições interessadas na conservação das aves silvestres.  

<br/> 

------------------------------------------------------------------------  

<br/> 

<center>

Críticas, comentários e sugestões:  ([cemave.sede@icmbio.gov.br](mailto:cemave.sede@icmbio.gov.br){.email}).

</center>

### 


![](figs/aves_aquaticas6.png){width="350"}

## Column {data-width="400"}

### **Distribuição dos indivíduos por ordem**

```{r carregando paleta de cores, include = FALSE}


#View(dados_cnaa)
# unique(dados_cnaa$especie_CBRO)
# unique(dados_cnaa$familia)

cor1 <- c("#008B8B",
          "#4AB1B1",
          "#70C4C4",
          "#95D8D8",
          "#CDF5F5",
          "#D9D9D9",
          "#CCCCCC",
          "#B2B2B2",
          "#999999",
          "#666666",
          "#FEE6CE",
          "#FDAE6B",
          "#E6550D")

cor2 <- c(Charadiirifomes = "#008B8B",
      Pelecaniformes = "#95D8D8",
      Gruiformes = "#70C4C4")
      
```



```{r G_individuos_por_orde, echo = FALSE}

# Gráfico de registros por ordem - barras - escala logarítmica


G_individuos_por_ordem <- dados_cnaa %>%
  filter(!is.na(ordem)) %>%
  group_by(ordem) %>%
  summarise(n_individuos = sum(registros)) %>%
  
  ggplot(aes(x = fct_reorder(ordem, n_individuos, .desc = F), y = n_individuos)) +
  geom_col(aes(fill = ordem)) +
  scale_fill_manual(
    values = c(Charadriiformes = "#4AB1B1",
      Pelecaniformes = "#008B8B",
      Gruiformes = "#70C4C4")
      ) +

  coord_flip() +
  scale_x_discrete(name = " ") +
  #scale_y_continuous(name = " ") +
  scale_y_log10(name = "Número de indivíduos", limits = c(1, 10000), labels = scales::number_format(big.mark = ".")
    ) +
  theme_minimal() +
  theme(
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    #panel.grid.major.x = element_blank(),
    legend.position = "none",
    axis.text = element_text(size = 12)
  ) +
  labs(title = " ",
       y = "Número de indivíduos")

G_individuos_por_ordem

```





### **Distribuição dos indivíduos por família**

```{r G_individuos_por_familia, echo = FALSE}


G_individuos_por_familia <- dados_cnaa %>%
  filter(!is.na(familia)) %>%
  group_by(familia) %>%
  summarise(n_individuos = sum(registros)) %>%
  
  ggplot(aes(x = fct_reorder(familia, n_individuos, .desc = F), y = n_individuos)) +
  geom_col(aes(fill = familia)) +
   scale_fill_manual(
     values = c(Ardeidae = "#008B8B",
                Charadriidae = "#70C4C4",
                Scolopacidae = "#4AB1B1",
                Laridae = "#95D8D8",
                Recurvirostridae = "#CDF5F5",
                Rallidae = "#A8E2E2")
      ) +

  coord_flip() +
  scale_x_discrete(name = " ") +
  #scale_y_continuous(name = " ") +
  scale_y_log10(name = "Número de indivíduos", limits = c(1, 10000), labels = scales::number_format(big.mark = ".")
    ) +
  theme_minimal() +
  theme(
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    #panel.grid.major.x = element_blank(),
    legend.position = "none",
    axis.text = element_text(size = 12)
  ) +
  labs(title = " ",
       y = "Número de indivíduos")

G_individuos_por_familia

```



## Column {data-width="200"}

### Aves registradas

```{r}

valueBox(5077, color = "#a4c3b2")
```

### Na Ilha da Restinga

```{r}

valueBox(958, color = "#a4c3b2")
```

### Na Lagoa de Guaraíras

```{r}

valueBox(4119, color = "#a4c3b2")
```


### Espécies registradas, distribuídas em

```{r}

valueBox(27, color = "#eaf4f4")
```

### famílias e

```{r}

valueBox(6, color = "#eaf4f4")

```

### ordens

```{r}

valueBox(3, color = "#eaf4f4")
```


### Amostragens realizadas, equivalendo a

```{r}

valueBox(6, color = "#f6fff8")
```

### km percorridos

```{r}


valueBox(81, color = "#f6fff8")
```


Amostragens
==========================================


## Column {.tabset data-width="500"}

### **Locais de amostragem**

```{r mapa geral amostragens, echo = FALSE}


mapa <- leaflet() %>%
  
  #Base groups
  
  setView(lng = -6.7, lat = -35.1,
           zoom = 4) %>%
  fitBounds(-35.8, -6.10, -33.7, -7.15) |> 
  
  addProviderTiles(providers$Esri.WorldImagery, group = "Imágenes de ESRI") %>%
  addProviderTiles(providers$OpenStreetMap.Mapnik, group = "Open Street Map") %>%
  #addProviderTiles(providers$Stamen.TonerLite, group = "Stamen Toner Lite") %>%
 
  
  
  # Overlay groups
    
  # addTiles() %>% 
  
    addCircleMarkers(data = dados_cnaa,
                     lat = ~latitude,
                     lng = ~longitude,
                     radius = ~5,
                     group = "Localidades amostradas", 
                     color = "yellow",
                     popup = paste("Local: ", dados_cnaa$local, "<br>")) |> 
                     
    # Layers Control

    addLayersControl(
        baseGroups = c("OpenStreetMap",
                       #"Stamen Toner Lite",
                       "Imágenes de ESRI"), 
        overlayGroups = c("Localidades amostradas"),
                          
        options = layersControlOptions(collapsed = FALSE,
                                       autoZIndex = FALSE)) %>% 
  
  addEasyButton(easyButton(
    icon="fa-globe", title="Zoom to Level 4",
    onClick=JS("function(btn, map){ map.setZoom(4); }"))) %>%
  addEasyButton(easyButton(
    icon="fa-crosshairs", title="Locate Me",
    onClick=JS("function(btn, map){ map.locate({setView: true}); }")))

mapa 

```


### **Métodos**

**Contagens padronizadas de aves aquáticas - Protocolo**

-   Ambientes: estuários e praias marinhas adjacentes

-   Período: inverno no Hemisfério Sul/verão no Hemisfério Norte (julho)

-   Maré: vazante (quadratura, lua crescente)

-   Horário inicial: 02 horas antes do pico de maré seca

-   Duração: Censo embarcado: 03 horas (14 a 19 Km) Censo a pé: 50 minutos (2.500 m)

-   Atividades da aves: Vôo/Descanso/Alimentação

-   N° observadores: 04 observadores

**A) Localidade 1 - Ilha da Restinga**

Transectos no estuário:

-   13 transectos de 1.000 m embarcados (canoa com motor rabeta) - 04 observadores

Transectos na praia:

-   02 transectos de 2.500 m (Norte e Sul) - a pé (simultâneaos), 02 observadores em cada

**B) Localidade 2 - Lagoa de Guaraíras**

Transectos no estuário:

-   19 transectos de 1.000 m embarcados (canoa com motor rabeta) - 04 observadores

Transectos Praia:

-   02 transectos de 2.500 m (Norte e Sul) - a pé (simultâneaos), 02 observadores em cada




## Column {data-width="500"}

### **Ilha da Restinga**

![](figs/ilha_restinga.png){width="650"}

### **Lagoa de Guaraíras**

![](figs/lagoa_grarairas.png){width="650"}




Visão Geral {data-navmenu="Resultados" data-navmenu-icon="fa-bookmark"}
==============================

##  Column {data-width = "600"}

### **Número total de indivíduos por ano em cada localidade**

```{r G_total_individuos_por_ano}

total_ano <- dados_cnaa %>% 
  #filter(local == "Ilha da Restinga") %>% 
    group_by(ano, local) %>% 
    summarise(soma = sum(registros))

renderPlot({
  
G_total_individuos_por_ano <- ggplot(total_ano,
        aes(ano, soma, fill = local)) +
     
        geom_col(aes(factor = local),  position = position_dodge()) +
       # geom_text(aes(label = soma), size = 12) +
        #geom_point(aes(factor = local)) +
        #ggtitle(input$UC) +
        scale_x_discrete(name = " ") +
        scale_y_continuous(name = " ", limits = c(0, 3000)) +
        scale_fill_manual(
        values = c("Ilha da Restinga" = "#008B8B",
                "Lagoa de Guaraíras" = "#A8E2E2")
      ) +
        theme_minimal() +
        theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        text = element_text(size = 18),
        legend.position = c(.2, .85),
        legend.title = element_blank()) 
        
  
G_total_individuos_por_ano

})

```



##  Column {data-width = "400"}

### **Numero total de indivíduos por estação em cada localidade**

```{r}

total_estacao <- dados_cnaa %>% 
  #filter(local == "Ilha da Restinga") %>% 
    group_by(estacao, local) %>% 
    summarise(soma = sum(registros)) 

renderPlot({

G_total_individuos_por_estacao <- ggplot(total_estacao, aes(estacao, soma, 
                                                            fill = local) ) +
    geom_col(aes(factor = estacao),  position = "dodge") +
    #geom_text(aes(label = soma),  position = position_dodge(0.9), size = 12) +
        
        # geom_line(aes(group = factor(ano))) +
        # geom_point(aes(group = factor(ano))) +
        #ggtitle(input$UC) +
        scale_x_discrete(name = " ", labels = c("Estação Chuvosa", "Estação Seca")) +
        scale_y_continuous(name = " ", limits = (c(0, 3000))) +
        scale_fill_manual(
        values = c("Ilha da Restinga" = "#666666",
                "Lagoa de Guaraíras" = "#FEE6CE")
        ) +
        theme_minimal() +
        theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        text = element_text(size = 18)) +
        theme(legend.position = c(0.2, 0.85),
        legend.title = element_blank())
  
G_total_individuos_por_estacao

})

```





Riqueza {data-navmenu="Resultados" data-navmenu-icon="fa-bookmark"}
=====================================

## Column {data-width="333"}


```{r curva rarefação geral, echo = FALSE}


# Comparação entre campanhas 


# dados_cnaa_raref <- read_csv2('dados/cnaa_rar.csv')
# 
# dados_cnaa_raref <- read.table('dados/cnaa_rar.txt')

# dados_cnaa_raref <- dados_cnaa_raref |> 
#   filter(especie_CBRO != "Tringa_spp." & especie_CBRO != "Sterna_spp.")

#View(dados_cnaa_raref)

## Número de indivíduos por local

# dados_cnaa_raref1 <- dados_cnaa_raref |>
#     select(-especie_CBRO)
# 
# colSums(dados_cnaa_raref1)

# class(dados_cnaa_raref)
# dados_cnaa_raref <- as.data.frame(dados_cnaa_raref)
# 
# dados_cnaa_raref <- as.matrix(dados_cnaa_raref)
## Rarefação


# Datatype refere-se ao tipo de dados que você vai analisar (e.g. abundância, incidência).
# Endpoint refere-se ao valor máximo que você determina para a extrapolação.

# resultados_raref_CNAA <- iNEXT(dados_cnaa_raref, q = 0, 
#                              datatype = "abundance", endpoint = 1500)


## Gráfico
# type define o tipo de curva de rarefação
# 1 = curva de rarefação baseada no indivíduo ou amostra
# 2 = curva de representatividade da amostra
# 3 = curva de rarefação baseada na representatividade (coverage-based)

# renderPlot({
#   
# G_campanhas <- ggiNEXT(resultados_raref_CNAA, type = 1) +
#     geom_vline(xintercept = 229, lty = 0.2) +
#     scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
#     scale_colour_manual(values = c("darkorange", "darkorchid", "cyan4", "red", "blue", "grey")) +
#     #scale_fill_manual(values = c("darkorange", "darkorchid", "cyan4", "red", "blue", "gray")) +
#     labs(x = "Número de indivíduos", y = " Riqueza de espécies") +
#     #tema_livro() +
#     theme_minimal() +
#       theme(
#         panel.grid.minor.y = element_blank(),
#         #panel.grid.major.y = element_blank(),
#         panel.grid.minor.x = element_blank(),
#         panel.grid.major.x = element_blank(),
#         legend.position = "top"
#     )
# 
# G_campanhas
# 
# })

```

### **Comparação da riqueza entre localidades**

```{r curva de rarefação localidades, echo = FALSE}

dados_cnaa_geral_localidades <- read.table('dados/cnaa_rar_local.txt')

# View(dados_cnaa_geral_localidades)

## Número de indivíduos por local
# 
# totais_localidades <- colSums(dados_cnaa_geral_localidades)
# View(totais_localidades)


resultados_raref_CNAA_localidades <- iNEXT(dados_cnaa_geral_localidades, q = 0, 
                             datatype = "abundance", endpoint = 4500)

renderPlot({
  
G_R_localidades <- ggiNEXT(resultados_raref_CNAA_localidades, type = 1) +
    geom_vline(xintercept = 958) +
    scale_y_continuous(expand=c(0, 0.2), limits = c(0, 30)) +
    scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
    scale_colour_discrete(labels = c("Ilha da Restinga", "Lagoa de Guaraíras")) +
    scale_colour_manual(values = c("cyan4", "darkorange")) +
    scale_fill_manual(values = c("cyan4", "darkorange")) +

    labs(x = "Número de indivíduos", y = "Número de espécies") +
    #tema_livro() +
  theme_minimal() +
  theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "right",
        legend.text=element_text(size=13),
        legend.title=element_blank(),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) 
    
G_R_localidades

})

```



### **Comparação da riqueza entre anos (2022 vs 2023)**

```{r curva de rarefação anos, echo - FALSE}

dados_cnaa_geral_anos <- read.table('dados/cnaa_geral_anos.txt')

# View(dados_cnaa_geral_anos)

## Número de indivíduos por local

# totais_localidades <- colSums(dados_cnaa_geral_localidades)
# View(totais_localidades)


resultados_raref_CNAA_anos <- iNEXT(dados_cnaa_geral_anos, q = 0, 
                             datatype = "abundance", endpoint = 4000)
renderPlot({

G_R_anos <- ggiNEXT(resultados_raref_CNAA_anos, type = 1) +
    geom_vline(xintercept = 1523) +
    scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
    scale_colour_manual(values = c("cyan4", "darkorange")) +
    scale_fill_manual(values = c("cyan4", "darkorange")) +
    labs(x = "Número de indivíduos", y = " Número de espécies") +
    #tema_livro() +
  theme_minimal() +
  theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "right",
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) 

G_R_anos

})

```


## Column {data-width="333"}



```{r curva de rarefação estações, echo - FALSE}


## Comparação entre estações - geral


# dados_cnaa_geral_estacoes <- read.table('dados/cnaa_geral_estacoes.txt')

#View(dados_cnaa_geral_estacoes)

## Número de indivíduos por local

# totais_localidades <- colSums(dados_cnaa_geral_localidades)
# View(totais_localidades)


# resultados_raref_CNAA_estacoes <- iNEXT(dados_cnaa_geral_estacoes, q = 0, 
#                              datatype = "abundance", endpoint = 3000)
# 
# renderPlot({
# 
# G_R_estacoes <- ggiNEXT(resultados_raref_CNAA_estacoes, type = 1) +
#     geom_vline(xintercept = 2528, lty = 0.2) +
#     scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
#     scale_colour_manual(values = c("cyan4",  "darkorange")) +
#     scale_fill_manual(values = c("cyan4", "darkorange")) +
#     labs(x = "Número de indivíduos", y = " Riqueza de espécies") +
#     #tema_livro() +
#   theme_minimal()
# 
# G_R_estacoes

# })

```


### **Comparação da riqueza entre estações na Ilha da Restinga**

```{r curva de rarefação - estações na Ilha da Restinga, echo = FALSE}

dados_cnaa_IR_estacoes <- read.table('dados/cnaa_IR_estacoes.txt')
#dados_cnaa_IR_estacoes[1, 1] <- " "
# View(dados_cnaa_IR_estacoes)

## Número de indivíduos por local

# totais_Ilha_Restinga <- colSums(dados_cnaa_IR_estacoes)
# View(totais_Ilha_Restinga)


resultados_raref_CNAA_IR_estacoes <- iNEXT(dados_cnaa_IR_estacoes, q = 0, 
                             datatype = "abundance", endpoint = 1500)

renderPlot({
  
G_R_IR_estacoes <- ggiNEXT(resultados_raref_CNAA_IR_estacoes, type = 1) +
    geom_vline(xintercept = 477) +
    scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
    scale_colour_manual(values = c("cyan4", "darkorange")) +
    scale_fill_manual(values = c("cyan4", "darkorange" )) +
    labs(x = "Número de indivíduos", y = " Número de espécies") +
    #tema_livro() +
  theme_minimal() +
  theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "right",
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) 


G_R_IR_estacoes

})

```

### **Comparação da riqueza entre estações na Lagoa de Guaraíras**

```{r curva de rarefação - estações na Lagoa de Guaraíras, echo = FALSE}

dados_cnaa_LG_estacoes <- read.table('dados/cnaa_LG_estacoes.txt')

# View(dados_cnaa_LG_estacoes)

## Número de indivíduos por local

# totais_localidades <- colSums(dados_cnaa_geral_localidades)
# View(totais_localidades)


resultados_raref_CNAA_LG_estacoes <- iNEXT(dados_cnaa_LG_estacoes, q = 0, 
                             datatype = "abundance", endpoint = 4000)

renderPlot({
  
G_R_LG_estacoes <- ggiNEXT(resultados_raref_CNAA_LG_estacoes, type = 1) +
    geom_vline(xintercept = 776) +
    scale_linetype_discrete(labels = c("Interpolado", "Extrapolado")) +
    scale_colour_manual(values = c("cyan4",  "darkorange")) +
    scale_fill_manual(values = c( "cyan4",  "darkorange")) +
    labs(x = "Número de indivíduos", y = "Número de espécies") +
    #tema_livro() +
  theme_minimal() +
  theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "right", 
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) 

G_R_LG_estacoes

})


```






Curvas de dominância {data-navmenu="Resultados" data-navmenu-icon="fa-bookmark"}
==============================================

## Column {data-width="500"}


### **Curva de dominância - geral**

```{r curvas de dominância geral - combinando as duas localidades, echo = FALSE}

cnaa_rank_geral <- read.table('dados/cnaa_rank_geral.txt')

cnaa_rank_total_combinado <- read.table('dados/cnaa_ranking_geral_combinado.txt')

## Cálculo da curva para a comunidade geral - localidades combinadas

rank_total_IR_LG <- rankabundance(cnaa_rank_total_combinado[1, cnaa_rank_total_combinado[1,] > 0])


rank_total_IR_LG <- as.data.frame(rank_total_IR_LG)



renderPlot({
   
G_ranking_total_combinado <- rank_total_IR_LG |>
  ggplot(aes(x = rank, y = abundance)) +
  geom_line(aes(colour = "cyan4")) +
  geom_point(aes(colour = "cyan4")) +
  
    scale_x_discrete(expand=c(0, 1), limits = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27")) +
  
    scale_y_continuous(expand=c(0, 0.2), limits = c(0, 2000), labels = scales::number_format(big.mark = ".")) +
  # scale_y_log10(expand=c(0, 0.2), limits = c(1, 10000), labels = scales::number_format(big.mark = ".")) +
    geom_line(aes(colour="cyan4"), size=1) +
    geom_point(aes(colour="cyan4"), size=4, alpha=0.4) +
    scale_colour_manual(values = c("cyan4")) +
    theme_minimal() +
    theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "none",
        legend.title = element_blank(),
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) +
        

  
  labs(x = "Ranking", y = "Abundância") 

G_ranking_total_combinado

})

```



### **Curvas de dominância por localidade**

```{r curvas de dominância por localidade, echo = FALSE}

#composicao_especies <- ecodados::composicao_anuros_div_taxonomica

cnaa_rank_geral <- read.table('dados/cnaa_ranking_geral.txt')

## Cálculo da curva para as comunidades 1 e 2
rank_IR_total <- rankabundance(cnaa_rank_geral[1, cnaa_rank_geral[1,] > 0])
rank_LG_total <- rankabundance(cnaa_rank_geral[2, cnaa_rank_geral[2,] > 0])

rank_IR_total <- as.data.frame(rank_IR_total)
rank_LG_total <- as.data.frame(rank_LG_total)

rank_IR_total1 <- rank_IR_total |> 
  mutate(local = case_when(
    rank == 1:22 ~ "Ilha da Restinga"))

rank_LG_total1 <- rank_LG_total |> 
  mutate(local = case_when(
    rank == 1:26 ~ "Lagoa de Guaraíras"))

ranking_locais <- rbind(rank_IR_total1, rank_LG_total1)

renderPlot({
   
G_ranking_locais <- ranking_locais |> 
  ggplot(aes(x = rank, y = abundance), factor = local) +
  geom_line(aes(color = local)) +
  geom_point(aes(color = local)) +
  
    scale_x_discrete(expand=c(0, 1), limits = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
    scale_y_continuous(expand=c(0, 0.2), limits = c(0, 2000), labels = scales::number_format(big.mark = ".")) +
  # scale_y_log10(expand=c(0, 0.2), limits = c(1, 10000), labels = scales::number_format(big.mark = ".")) +
    geom_line(aes(colour=local), size=1) +
    geom_point(aes(colour=local), size=4, alpha=0.4) +
    scale_colour_manual(values = c("cyan4",  "darkorange")) +
    theme_minimal() +
    theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = c(0.8, 0.85),
        legend.title = element_blank(),
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) +
        

  
  labs(x = "Ranking", y = "Abundância", colour = "Local") 

G_ranking_locais

})


```




## Column {data-width="500"}

### **Curvas de dominância por estação - Ilha da Restinga**

```{r r curvas de dominância - comparação entre estações - Ilha da Restinga, echo = FALSE}

cnaa_ranking_estacao_IR <- read.table('dados/cnaa_ranking_estacao_IR.txt')


## Cálculo da curva para as comunidades 1 e 2
rank_IR_chuvosa <- rankabundance(cnaa_ranking_estacao_IR[1, cnaa_ranking_estacao_IR[1,] > 0])
rank_IR_seca <- rankabundance(cnaa_ranking_estacao_IR[2, cnaa_ranking_estacao_IR[2,] > 0])

rank_IR_chuvosa <- as.data.frame(rank_IR_chuvosa)
rank_IR_seca <- as.data.frame(rank_IR_seca)

rank_IR_chuvosa1 <- rank_IR_chuvosa |>
  mutate(local = case_when(
    rank == 1:18 ~ "Estação chuvosa"))

rank_IR_seca1 <- rank_IR_seca |>
  mutate(local = case_when(
    rank == 1:17 ~ "Estação seca"))

ranking_estacao_IR <- rbind(rank_IR_chuvosa1, rank_IR_seca1)

renderPlot({
   
G_ranking_estacao_IR <- ranking_estacao_IR |> 
  ggplot(aes(x = rank, y = abundance), factor = local) +
  geom_line(aes(color = local)) +
  geom_point(aes(color = local)) +
  
    scale_x_discrete(expand=c(0, 1), limits = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18")) +
    scale_y_continuous(expand=c(0, 0.2), limits = c(0, 150), labels = scales::number_format(big.mark = ".")) +
  # scale_y_log10(expand=c(0, 0.2), limits = c(1, 10000), labels = scales::number_format(big.mark = ".")) +
    geom_line(aes(colour=local), size=1) +
    geom_point(aes(colour=local), size=4, alpha=0.4) +
    scale_colour_manual(values = c("cyan4",  "darkorange")) +
    theme_minimal() +
    theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = c(0.8, 0.83),
        legend.title = element_blank(),
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) +
        

  
  labs(x = "Ranking", y = "Abundância", colour = "Local") 

G_ranking_estacao_IR

})


```


### **Curvas de dominância por estação - Lagoa de Guaraíbas**


```{r r curvas de dominância - comparação entre estações - Lagoa de Guaraíras, echo = FALSE}

cnaa_ranking_estacao_LG <- read.table('dados/cnaa_ranking_estacao_LG.txt')


## Cálculo da curva para as comunidades 1 e 2

rank_LG_chuvosa <- rankabundance(cnaa_ranking_estacao_LG[1, cnaa_ranking_estacao_LG[1,] > 0])
rank_LG_seca <- rankabundance(cnaa_ranking_estacao_LG[2, cnaa_ranking_estacao_LG[2,] > 0])

rank_LG_chuvosa <- as.data.frame(rank_LG_chuvosa)
rank_LG_seca <- as.data.frame(rank_LG_seca)

rank_LG_chuvosa1 <- rank_LG_chuvosa |>
  mutate(local = case_when(
    rank == 1:20 ~ "Estação chuvosa"))

rank_LG_seca1 <- rank_LG_seca |>
  mutate(local = case_when(
    rank == 1:17 ~ "Estação seca"))

ranking_estacao_LG <- rbind(rank_LG_chuvosa1, rank_LG_seca1)

renderPlot({
   
G_ranking_estacao_LG <- ranking_estacao_LG |> 
  ggplot(aes(x = rank, y = abundance), factor = local) +
  geom_line(aes(color = local)) +
  geom_point(aes(color = local)) +
  
    scale_x_discrete(expand=c(0, 1), limits = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20")) +
    scale_y_continuous(expand=c(0, 0.2), limits = c(0, 600), labels = scales::number_format(big.mark = ".")) +
  # scale_y_log10(expand=c(0, 0.2), limits = c(1, 10000), labels = scales::number_format(big.mark = ".")) +
    geom_line(aes(colour=local), size=1) +
    geom_point(aes(colour=local), size=4, alpha=0.4) +
    scale_colour_manual(values = c("cyan4",  "darkorange")) +
    theme_minimal() +
    theme(
        panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = c(0.8, 0.90),
        legend.title = element_blank(),
        legend.text=element_text(size=13),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) +
        

  
  labs(x = "Ranking", y = "Abundância", colour = "Local") 

G_ranking_estacao_LG

})



```



Registros por espécie {data-navmenu="Resultados" data-navmenu-icon="fa-bookmark"}
========================================



## Barra Lateral {.sidebar}

```{r gerando a lista das espécies, include = FALSE}


cnaa_especie <- dados_cnaa %>%
    group_by(especie_CBRO, campanha, local, imagem) %>%
    summarise(soma = sum(registros))


#especies <- c(unique(dados_cnaa$especie), "Todas") # excluindo a opção "Todas"
especies <- sort(c(unique(dados_cnaa$especie_CBRO))) # ordenando os valores
especies <- especies[c(-23, -28)] # excluindo Tringa spp e Sterna spp
especies
 
```



```{r criando o painel de seleção, echo = FALSE}

inputPanel(selectInput("especie", label = h4("Selecione a espécie:"),
                        choices = especies,
                        selected = "Numenius hudsonicus"))
                       

# actionButton("Atualizar","Atualizar")

#dados <- eventReactive(input$Atualizar,{dados_monitora1 %>% 
         #filter(str_detect(UC, if_else(input$UC == 'Todas',"",input$UC)))})

# cnaa_especie %>%
# filter(str_detect(especies, if_else(input$especie == 'Todas',"",input$especie)))

```


## Column {data-width="400"}

### **Espécie selecionada**

```{r apresenta a imagem da espécie selecionada, echo = FALSE}

 
renderImage({

  
  imagens_ave <-
    tibble::tibble(
      cnaa_especie %>%
        #filter(especie_CBRO == "Ardea alba")
        filter(especie_CBRO == input$especie)

    )
  
    url <- imagens_ave[1 , 4] %>% 
      pull(imagem)
    
    # img(
    ##   #src = url,
    #   file.path("www", paste0(url)),
    #   width = "45%")
    
      list(
      src = file.path("www", paste0(url)),
      width = "100%")
    
})

```



### **Número de indivíduos registrados por campanha**

```{r G_individuos_por_especie, echo = FALSE}

 renderPlot({

  G_individuos_por_especie <- cnaa_especie %>%
          filter(str_detect(especie_CBRO, if_else(input$especie == 'Todas', " ", input$especie))) %>%
        ggplot(aes(campanha, soma)) +
        geom_col(aes(group = factor(local), fill = local)) +
        # geom_point(aes(group = factor(local))) +
        # geom_line(aes(group = factor(local))) +
        ggtitle(input$UC) +
        scale_x_discrete(name = " ", limits = c(1, 2, 3, 4, 5, 6)) +
        scale_y_continuous(name = " ") +
        scale_fill_manual(
        values = c("Ilha da Restinga" = "#008B8B",
                "Lagoa de Guaraíras" = "#A8E2E2")
      ) +
        scale_x_discrete(limits = c("1", "2", "3", "4", "5", "6"),
                       labels = c("jul-22-IR", "jul-22-LG", "fev-23-IR", "fev-23-LG",
                                  "jul-23-IR", "jul-23-LG"), labs(x = " ")) +
        theme_minimal() +
        theme(
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "right",
        legend.direction = "vertical",
        legend.text=element_text(size=11),
        legend.title = element_blank(),
        axis.text = element_text(size = 13),
        axis.title = element_text(size = 13, margin = margin(t = 10, b = 10))
        ) 
        

  G_individuos_por_especie

})


```




## Column {.tabset data-width="500"}


### **Número de indivíduos por espécie - Lagoa de Guaraíras**

```{r G_especies_por_campanha_LG_todas, echo = FALSE}


G_especies_por_campanha_LG_todas <-
  dados_cnaa |>
  filter(local == "Lagoa de Guaraíras") |> 
  
  ggplot(aes(
    x = campanha,
    y = registros,
    group = especie_CBRO,
    col = especie_CBRO
  )) +
  geom_line() +
  geom_point(size = 1.5) +
  scale_y_log10(name = " ", limits = c(1, 1000), labels = scales::number_format(big.mark = ".")) +
  scale_x_discrete(limits = c("2", "4", "6"),
                       labels = c("jul-22", "fev-23", "jul-23"), labs(x = "Campanha")) +
  
  theme_minimal() +
  theme(panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "top",
        legend.justification = "left",
        legend.direction = "horizontal",
        legend.text=element_text(size=7),
        legend.title = element_blank()) +
        #scale_y_continuous(limits = c(0, 2)) +
  labs(title = " ",
               x = "Campanha",
               y = " ",
               col = " ")
  

ggplotly(G_especies_por_campanha_LG_todas)

```



### **Número de indivíduos por espécie - Ilha da Restinga**

```{r G_especies_por_campanha_IR_todas, echo = FALSE}

G_especies_por_campanha_IR_todas <-
  dados_cnaa |>
  filter(local == "Ilha da Restinga") |> 
  
  ggplot(aes(
    x = campanha,
    y = registros,
    group = especie_CBRO,
    col = especie_CBRO
  )) +
  geom_line() +
  geom_point(size = 1.5) +
  scale_y_log10(name = " ", limits = c(1, 1000), labels = scales::number_format(big.mark = ".")) +
  scale_x_discrete(limits = c("1", "3", "5"),
                       labels = c("jul-22-IR", "fev-23-IR", "jul-23-IR"), labs(x = "Campanha")) +
  theme_minimal() +
  theme(panel.grid.minor.y = element_blank(),
        #panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "top",
        legend.justification = "left",
        legend.direction = "horizontal",
        legend.text=element_text(size=7),
        legend.title = element_blank()) +
        #scale_y_continuous(limits = c(0, 2)) +
  
  labs(title = " ",
               x = "Campanha",
               y = " ",
               col = " ")
  

ggplotly(G_especies_por_campanha_IR_todas)

```






Consultas (Base de dados)
=========================================

## Column {data-width="1000"}

### **Dados brutos**

```{r}

renderDataTable({

          dados_cnaa |> 
            select(-c(mes, ano, imagem)) |> 
          datatable(
          caption = 'Tabela 1. Dados brutos do CNAA coletados pela equipe do CEMAVE - 2020 a 2022.',
          
          colnames = c('ID', 'Campanha', 'Espécie (CBRO)', 'Espécie (CNAA)', 'Código CNAA', 'Nome Vulgar', 'Família', 'Grupos', 'Ordem', 'Registros', 'Data', 'Estação', 'Local', 'Longitude', 'Latitude'),
          
          extensions = 'Buttons',
                           elementId = NULL,
                           # extensions= "Scroller",
                           style="bootstrap",
                           class="stripe hover",
                           width="80%",
                           rownames = F,
                           autoHideNavigation = T,
                           escape =FALSE,
                           filter = "top",
                           options=list(deferRender=TRUE,
                                   pageLength = 15,
                                   scrollY=300,
                                   dom = 'Bfrtip', 
                         #buttons = c('copy', 'csv', 'excel', 'pdf')))
                         buttons = list('copy', 'print', list(
        extend = 'collection',
        buttons = c('csv', 'excel'),
        text = 'Download'))))
  
})

```


Imagens {.storyboard}
========================================


### **CEMAVE em ação no CNAA - Lagoa de Guaraíras, RN - 2022**


```{r imagens A}

knitr::include_graphics('figs/cemave_em_acao.png') 


```

***

### **CEMAVE em ação no CNAA - Lagoa de Guaraíras, RN - 2022**


```{r imagens B}

knitr::include_graphics('figs/cemave_em_acao1.png')


```

***


### **CEMAVE em ação no CNAA - Ilha da Restinga - Cabedelo, PB - 2022**

```{r imagens C}

knitr::include_graphics('figs/cemave_em_acao2.png') 


```


### **CEMAVE em ação no CNAA - Ilha da Restinga - Cabedelo, PB - 2022**

```{r imagens D}

knitr::include_graphics('figs/cemave_em_acao3.png') 


```


### **CEMAVE em ação no CNAA - Lagoa de Guaraíras, RN - 2023**

```{r imagens E}

knitr::include_graphics('figs/cemave_em_acao4.png') 


```


### **CEMAVE em ação no CNAA - Lagoa de Guaraíras, RN - 2023**

```{r imagens F}

knitr::include_graphics('figs/cemave_em_acao5.png') 


```


### **CEMAVE em ação no CNAA - Ilha da Restinga - Cabedelo, PB - 2023**

```{r imagens G}

knitr::include_graphics('figs/cemave_em_acao6.png') 


```

### **CEMAVE em ação no CNAA - Ilha da Restinga - Cabedelo, PB - 2023**

```{r imagens H}

knitr::include_graphics('figs/cemave_em_acao7.png') 


```



Saiba mais {data-orientation="columns"}
=======================================

## Column-1 {data-width="500"}

### **Sobre o Censo Neotropical de Aves Aquáticas - CNAA**

#### **O CNAA**

O Censo Neotropical de Aves Aquáticas -- CNAA é um programa de monitoramento de longo prazo, baseado em contagem de aves aquáticas, realizado duas vezes ao ano (fevereiro e julho) de forma concomintante em vários países da América do Sul. A organização **Wetlands International**\*\* coordena o CNAA e cada país possui um coordenador nacional. Atualmente, o CEMAVE coordena essa iniciativa no Brasil.

Essa atividade depende do envolvimento de instituições de meio ambiente e voluntários como organizações ambientalistas, observadores de aves, guias de observadores e estudantes.

São objetivos do CNAA:

-   Chamar atenção para a importância das aves e dos ambientes aquáticos

-   Identificar e monitorar áreas úmidas de importância internacional

-   Obter dados para estimativas populacionais das aves aquáticas

-   Monitorar mudanças nos números de aves aquáticas

-   Ampliar o conhecimento sobre espécies pouco compreendidas

[Acesse aqui](https://drive.google.com/file/d/12Rj9wVdIkgB3wntTj7qeZyGEcmb7cJog/view) mais informações sobre o Censo Neotropical de Aves Aquáticas e saiba como você pode participar!

**Equipe responsável pelas ativiades do CNAA no CEMAVE**:  


-   Priscilla Prudente do Amaral - Coordenação Nacional do CNAA
-   Roberto Cavalcanti Barbosa Filho - Coordenador do Censo 2022-2023/CEMAVE
-   Antonio Emanuel Barreto Alves de Sousa (ICMBio/CEMAVE)
-   Randson Modesto Coêlho da Paixão (ICMBio/CEMAVE)
-   Arlindo Gomes Filho (ICMBio/CEMAVE)
-   Elivan Arantes de Souza (ICMBio/CEMAVE)
-   Murilo Sergio Arantes (ICMBio/CEMAVE)
-   Claudia Louro Barbosa (ICMBio/CEMAVE)
-   Thomaz Callado - Voluntário  

------------------------------------------------------------------------  

#### **O CEMAVE**

O Centro Nacional de Pesquisa e Conservação de Aves Silvestres - CEMAVE, vinculado ao Instituto Chico Mendes de Conservação da Biodiversidade - ICMBio, tem como missão "Promover a conservação de aves silvestres e seus ambientes por meio de políticas públicas e participação da sociendade."

Visite regularmente [nosso site](https://www.gov.br/icmbio/pt-br/assuntos/centros-de-pesquisa/aves) para informações adicionais sobre a conservação de aves silvestres.

------------------------------------------------------------------------------

<br/>

  
Documento gerado em `r format(Sys.Date(), "%d %B de %Y")`.

Última atualização: **05/12/2023**



## Column-2 {data-width = 500}

### **Fale conosco**


::: {style="display:flex; flex-direction:row; justify-content:space-evenly; align-items:center;"}

<div>

<center>[![logo_cemave](figs/logo-cemave.jpg "CEMAVE"){width="250"}](https://www.gov.br/icmbio/pt-br/assuntos/centros-de-pesquisa/cemave)</center>

</div>

:::

<center>


<br/>

**Centro Nacional de Pesquisa e Conservação de Aves Silvestres - CEMAVE**\
[Sede Nacional do CEMAVE - Floresta Nacional da Restinga de Cabedelo -- ICMBio\
BR-230 - Km 10 Renascer\
58108-012 Cabedelo, PB\
Tels: 83 3245-5001 / 3245-5278](https://www.gov.br/icmbio/pt-br/assuntos/centros-de-pesquisa/aves/conheca-o-cemave/localizacao)

cemave.sede@icmbio.gov.br

</center>

------------------------------------------------------------------------

<center>[![logo-cemave](figs/logo-icmbio.png "ICMBio"){width="40%" height="20%"}](https://www.gov.br/icmbio/pt-br)



<br>

**Instituto Chico Mendes de Conservação da Biodiversidade - ICMBio**\
Complexo Administrativo EQSW 103/104 s/n\
Cruzeiro/Sudoeste/Octogonal\
70670-350 Brasília, DF

</center>
